name: canary-mac-arm
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev 
jobs:

  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: setup
        uses: ./.github/actions
    outputs:
      target: ${{ steps.setup.outputs.target }}

  # create_env_artifact:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Create artifact file
  #       run: |
  #         echo "target=aarch64-apple-darwin" > config.txt
  #         echo "ttt=hello" >> config.txt
  #         ls -l
  #         cat config.txt

  #     - name: Upload config artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: config
  #         path: config.txt

  run_test:
    runs-on: macos-latest
    needs: setup
    steps:
      - name: Download config artifact
        uses: actions/download-artifact@v4
        with:
          name: config
      - name: set env
        run: |
          while IFS='=' read -r key value; do
            echo "$key=$value" >> $GITHUB_ENV
          done < config.txt

      - name: Test get environment variables
        run: |
          echo "target: ${{ needs.setup.outputs.target }}"
          echo "ttt: ${{ needs.setup.outputs.target }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ needs.setup.outputs.target }}

      - name: Cargo testing
        run: |
            cargo t
        env:
          RUST_BACKTRACE: full

  run_build:
    runs-on: macos-latest
    needs: setup
    steps:
      - name: Download config artifact
        uses: actions/download-artifact@v4
        with:
          name: config
      - name: set env
        run: |
          while IFS='=' read -r key value; do
            echo "$key=$value" >> $GITHUB_ENV
          done < config.txt

      - name: Test get environment variables
        run: |
          echo "target: ${{ needs.setup.outputs.target }}"

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ needs.setup.outputs.target }}

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ needs.setup.outputs.target }}

      - name: Strip binary (linux and macos)
        run:  |
          for file in snm node npm npx pnpm pnpx; do
            strip "target/${{ needs.setup.outputs.target }}/release/$file"
          done

      - name: Build archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md target/${{ needs.setup.outputs.target }}/release/{node,npm,npx,pnpm,pnpx,snm} archive/
          tar -czf ${{ needs.setup.outputs.target }}.tar.gz -C archive  LICENSE README.md node npm npx pnpm pnpx snm
          ls -l

      - name: Calculate SHA256 checksum
        run: |
          echo "Calculating SHA256 for ${{ needs.setup.outputs.target }}.tar.gz..."
          shasum -a 256 ${{ needs.setup.outputs.target }}.tar.gz | tee ${{ needs.setup.outputs.target }}.sha256
          cat ${{ needs.setup.outputs.target }}.sha256

      - name: Upload archive
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.setup.outputs.target }}.tar.gz
          path: ${{ needs.setup.outputs.target }}.tar.gz

      - name: Upload archive sha256
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.setup.outputs.target }}.sha256
          path: ${{ needs.setup.outputs.target }}.sha256

 