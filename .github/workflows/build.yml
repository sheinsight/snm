name: building-platform-binary

on:
  workflow_call:
    # inputs:
    #   target:
    #     required: true
    #     type: string
    
env:
  APP_NAME: snm

jobs:
  build-linux:
    name: Build for Linux
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}

      - name: Install cross
        uses: taiki-e/install-action@v2
        with:
          tool: cross

      - name: Build with cross (GNU)
        run: cross build --verbose --release --target ${{ matrix.target }}
        if: ${{ matrix.target == 'x86_64-unknown-linux-gnu' }}
        env:
          CROSS_IMAGE: ghcr.io/cross-rs/x86_64-unknown-linux-gnu:edge

      - name: Build with cross (MUSL)
        run: cross build --verbose --release --target ${{ matrix.target }}
        if: ${{ matrix.target == 'x86_64-unknown-linux-musl' }}
        env:
          CROSS_IMAGE: ghcr.io/cross-rs/x86_64-unknown-linux-musl:edge

      - name: Create Archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md target/${{ matrix.target }}/release/{snm,snm-shim} archive/
          tar -czf ${{ matrix.target }}.tar.gz -C archive LICENSE README.md snm snm-shim
          ls -l
          ls -l archive
          ls -l target/${{ matrix.target }}/release

      - name: Upload Artifacts tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz

  build-windows:
    name: Build for Windows
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - x86_64-pc-windows-gnu
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}

      - name: Build with cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Create Archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md target/${{ matrix.target }}/release/{snm,snm-shim} archive/
          tar -czf ${{ matrix.target }}.tar.gz -C archive LICENSE README.md snm snm-shim
          ls -l
          ls -l archive
          ls -l target/${{ matrix.target }}/release

      - name: Upload Artifacts tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz

  build-macos:
    name: Build for macOS
    strategy:
      matrix:
        include:
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}

      - name: Build with cargo
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Create Archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md target/${{ matrix.target }}/release/{snm,snm-shim} archive/
          tar -czf ${{ matrix.target }}.tar.gz -C archive LICENSE README.md snm snm-shim
          ls -l
          ls -l archive
          ls -l target/${{ matrix.target }}/release

      - name: Upload Artifacts tar.gz
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: ${{ matrix.target }}.tar.gz
