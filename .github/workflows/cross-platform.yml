name: Cross-platform CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
            # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          
          # Windows targets
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          
          # macOS targets
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Run tests
        run: cargo test
        env:
          RUST_BACKTRACE: full

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Strip binary (Linux and macOS only)
        if: matrix.os != 'windows-latest'
        run: |
          for file in snm node npm npx pnpm pnpx; do
            strip "target/${{ matrix.target }}/release/$file"
          done

      - name: Create archive
        shell: bash
        run: |
          mkdir archive
          cp LICENSE README.md target/${{ matrix.target }}/release/{node,npm,npx,pnpm,pnpx,snm} archive/
          tar -czf ${{ matrix.target }}.tar.gz -C archive LICENSE README.md node npm npx pnpm pnpx snm
          ls -l

      - name: Calculate SHA256 checksum
        run: |
          echo "Calculating SHA256 for ${{ matrix.target }}.tar.gz..."
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            certutil -hashfile "${{ matrix.target }}.tar.gz" SHA256 > "${{ matrix.target }}.sha256"
          else
            shasum -a 256 ${{ matrix.target }}.tar.gz | tee ${{ matrix.target }}.sha256
          fi
          cat ${{ matrix.target }}.sha256
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            ${{ matrix.target }}.tar.gz
            ${{ matrix.target }}.sha256