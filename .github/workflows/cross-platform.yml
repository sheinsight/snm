name: Cross-platform CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  build-and-test:
    strategy:
      matrix:
        include:
            # Linux targets
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          # - os: ubuntu-latest
          #   target: i686-unknown-linux-gnu
          # - os: ubuntu-latest
          #   target: aarch64-unknown-linux-gnu
          
          # Windows targets
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: i686-pc-windows-msvc
          
          # macOS targets
          - os: macos-14
            target: aarch64-apple-darwin
          - os: macos-13
            target: x86_64-apple-darwin
      fail-fast: false

    runs-on: ${{ matrix.os }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Run tests
        run: cargo test
        env:
          RUST_BACKTRACE: full

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Strip binary (Linux and macOS only)
        if: matrix.os != 'windows-latest'
        run: |
          for file in snm node npm npx pnpm pnpx; do
            strip "target/${{ matrix.target }}/release/$file"
          done
  coverage:
    name: Collect test coverage
    runs-on: ubuntu-latest
    continue-on-error: false
    env:
      # RUSTFLAGS: -D warnings
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@0ad4b8fadaa221de15dcec353f45205ec38ea70b # v4
        # Nightly Rust is used for cargo llvm-cov --doc below.
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@23bce251a8cd2ffc3c1075eaa2367cf899916d84 # v2

      - name: Install latest nextest release
        uses: taiki-e/install-action@6608b29f1fd1773aafb923cffd26c3a528f72083 # v2
        with:
          tool: nextest
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@6608b29f1fd1773aafb923cffd26c3a528f72083 # v2
        with:
          tool: cargo-llvm-cov

      - name: Collect coverage data
        # Generate separate reports for nextest and doctests, and combine them.
        run: |
          cargo +nightly llvm-cov --no-report nextest --test-threads=1
          cargo +nightly llvm-cov --no-report --doc
          cargo +nightly llvm-cov report --doctests --lcov --output-path lcov.info
      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@5ecb98a3c6b747ed38dc09f787459979aebb39be # v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: lcov.info
