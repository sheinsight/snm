name: Release
env:
  RUST_BACKTRACE: full
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
# on:
#   release:
#     types: [published]

on:
  push:
    tags:
      - "v*"

jobs:

  Testing:
    name: Testing
    strategy:
      matrix:
        include:
          # Linux targets (GNU)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu    # 64位 Linux (GNU)
          # Linux targets (MUSL)
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl   # 64位 Linux (MUSL)

          # Windows targets
          - os: windows-latest
            target: x86_64-pc-windows-msvc      # 64位 Windows (MSVC)
          - os: windows-latest
            target: x86_64-pc-windows-gnu       # 64位 Windows (MinGW)

          # macOS targets
          - os: macos-14
            target: aarch64-apple-darwin        # Apple Silicon Mac
          - os: macos-13
            target: x86_64-apple-darwin         # Intel Mac

      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          override: true
          target: ${{ matrix.target }}
      # 缓存
      # - name: Cache
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/.cargo/bin/
      #       ~/.cargo/registry/index/
      #       ~/.cargo/registry/cache/
      #       ~/.cargo/git/db/
      #       target/
      #     key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock', 'justfile') }}
      #     # restore-keys: |
      #     #   ${{ runner.os }}-${{ matrix.target }}-cargo-

      - name: Install just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Just Setup
        run: | 
          just setup

      - name: Just Ready
        run: | 
          just ready

      - name: Just E2E
        run: | 
          just ci-e2e

  matrix-build:
    needs: Testing
    uses: ./.github/workflows/build.yml

  publish:
    name: Publish To Github Release
    runs-on: ubuntu-latest
    needs: matrix-build
    steps:
      - name: Checkout code  # 添加这一步
        uses: actions/checkout@v4
        with:
          fetch-depth: 0     # 获取完整的 git 历史
      - uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create Draft Release Upload Release Asset
        id: upload-release-asset
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: ${{ github.ref_name }}
          draft: true
          prerelease: false
          files: |
            **/*.tar.gz
      - name: Update Release
        if: startsWith(github.ref, 'refs/tags/')
        run: | 
          echo "Updating release..."
          gh release edit ${{ github.ref_name }} --draft=false --latest
 